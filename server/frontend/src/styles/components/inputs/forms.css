.Button {
    width: fit-content;
}
.Button button {
    padding: 1.6em 2.2em;
}
.Button a {
    text-decoration: none;
}
.Button button {
    font-size: 1rem;
}
.Button button {
    cursor: pointer;
    position: relative;
    width: 100%;
    background-color: var(--color-bg);
    border: 2px solid var(--color-border);
    
    color: var(--color-text);
    font-family: "Roboto", sans-serif;
}
.Button button:focus {
    outline: none;
    border: 2px solid var(--color-text);    
}
.Button button::before,
.Button button::after {
    position: absolute;
    content: "";
    top: -2px;
    left: -2px;
    width: 0;
    height: 0;
    background: transparent;
    border: 2px solid transparent;
    border-radius: 0.25em;
}
.Button button:hover::before {
    animation: TopRightAnimate var(--msecs-300) linear forwards;
}
.Button button:hover::after {
    animation: BottomLeftAnimate var(--msecs-300) linear forwards;
}
.Button button:not(:hover)::before {
    animation: TopRightAnimateReverse var(--msecs-300) linear forwards;
}
.Button button:not(:hover)::after {
    animation: BottomLeftAnimateReverse var(--msecs-300) linear forwards;
}



@keyframes TopRightAnimateReverse {
0% { 
    width: 100%; 
    height: 100%; 
    border-top-color: var(--color-text); 
    border-right-color: var(--color-text); 
    border-bottom-color: transparent; 
    border-left-color: transparent; 
}      

50% { 
    width: 100%; 
    height: 0; 
    border-top-color: var(--color-text); 
    border-right-color: var(--color-text); 
    border-bottom-color: transparent; 
    border-left-color: transparent; 
}   

100% { 
    width: 0; 
    height: 0; 
    border-color: transparent;
}       
}

@keyframes BottomLeftAnimateReverse {

    0% { 
        width: 100%; 
        height: 100%; 
        border-top-color: transparent; 
        border-right-color: transparent; 
        border-bottom-color: var(--color-text); 
        border-left-color: var(--color-text); 
    }

    50% { 
        width: 0; 
        height: 100%; 
        border-top-color: transparent; 
        border-right-color: transparent; 
        border-bottom-color: var(--color-text); 
        border-left-color: var(--color-text); 
    }       

    100% { 
        width: 0; 
        height: 0; 
        border-color: transparent; 
    } 

}

@keyframes TopRightAnimate {
 0% { 
     width: 0; 
     height: 0; 
     border-top-color: var(--color-text); 
     border-right-color: transparent; 
     border-bottom-color: transparent; 
     border-left-color: transparent; 
 } 

 50% { 
     width: 100%; 
     height: 0; 
     border-top-color: var(--color-text); 
     border-right-color: var(--color-text); 
     border-bottom-color: transparent; 
     border-left-color: transparent; 
 } 

 100% { 
     width: 100%; 
     height: 100%; 
     border-top-color: var(--color-text); 
     border-right-color: var(--color-text); 
     border-bottom-color: transparent; 
     border-left-color: transparent; 
 }  
}

@keyframes BottomLeftAnimate {
 0% { 
     width: 0; 
     height: 0; 
     border-top-color: transparent; 
     border-right-color: transparent; 
     border-bottom-color: transparent; 
     border-left-color: var(--color-text); 
 } 

 50% { 
     width: 0; 
     height: 100%; 
     border-top-color: transparent; 
     border-right-color: transparent; 
     border-bottom-color: var(--color-text); 
     border-left-color: var(--color-text); 
 } 

 100% { 
     width: 100%; 
     height: 100%; 
     border-top-color: transparent; 
     border-right-color: transparent; 
     border-bottom-color: var(--color-text); 
     border-left-color: var(--color-text); 
 }      
} 

.TextInput,
.SelectInput {
    display: grid;
    grid-template-rows: auto auto;
    row-gap: 5px;
    margin: 10px 0;
}
.TextInput label,
.SelectInput label {
    display: block;
    font-size: 1.2rem;
    font-weight: 300;
}

.TextInput select,
.SelectInput select,
.TextInput input,
.SelectInput input {
    padding: 0.6em 0.8em;
    width: 100%;
    box-sizing: border-box;
    font-family: "Roboto", sans-serif;
}

/*
An encapsulated checkbox input and its associated label.

.CheckboxInput > label            - The label containing the input box and text
*/
.CheckboxInput {
    width: 100%;
}
.CheckboxInput > label {
    display: grid;
    grid-template-columns: fit-content(100%) fit-content(100%);
    column-gap: 0.8em;
    align-items: center;

    font-weight: 300;
    font-size: calc(1em + 0.3vw);
    color: var(--color-text);
    transition: var(--msecs-300) color;
}
.CheckboxInput > label:hover {
    cursor: pointer;
    color: var(--color-link);
    transition: var(--msecs-300) color;
}